public class Solution {
    public string LongestPalindrome(string s) 
    {
        if(s.Length == 0)
        {
            return "";
        }
        if(s.Length == 1)
        {
            return s[0].ToString();
        }
        string currentStr = "";
        int len = 0;
        for(int i = 0; i < s.Length ; i++)
        {
            ExpandFromCenter(s, i, i, ref len, ref currentStr);
            ExpandFromCenter(s, i, i+1, ref len, ref currentStr);
        }
        return currentStr;
    }
    
    public void ExpandFromCenter(string str, int left, int right, ref int len, ref string currentStr)
    {
        int L = left;
        int R = right;
        while(L >= 0 && R < str.Length && str[L] == str[R])
        {
            if(len < R-L+1)
            {
                len = R-L+1;
                currentStr = str.Substring(L, len);
            }
            L--;
            R++;
        }
    }
}